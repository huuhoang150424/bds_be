tags:
  - name: Reports

paths:
  /reports/createReports:
    post:
      tags:
        - Reports
      summary: Create a new report
      description: Allows a user to create a report on a post.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - postId
                - reason
              properties:
                userId:
                  type: string
                  format: uuid
                  description: The ID of the user creating the report.
                postId:
                  type: string
                  format: uuid
                  description: The ID of the post being reported.
                reason:
                  type: string
                  enum: [Spam, Inappropriate, Misinformation]
                  description: Reason for reporting.
                content:
                  type: string
                  description: Additional details about the report.
      responses:
        201:
          description: Report created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Report created successfully
                  reportId:
                    type: string
                    format: uuid
        400:
          description: Missing required fields or invalid data
        401:
          description: Unauthorized

  /reports/{postId}/getReportByPostId:
    get:
      tags:
        - Reports
      summary: Get reports by post ID
      description: Retrieve all reports associated with a specific post.
      security:
        - BearerAuth: []

      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Reports retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reportId:
                      type: string
                      format: uuid
                    userId:
                      type: string
                      format: uuid
                    reason:
                      type: string
                    content:
                      type: string
                    status:
                      type: string
                      enum: [Pending, Resolved]
        400:
          description: Invalid post ID
        401:
          description: Unauthorized

  /reports/getAllReports:
    get:
      tags:
        - Reports
      summary: Get all reports
      description: Retrieve all reports in the system.
      security:
        - BearerAuth: []

      responses:
        200:
          description: All reports retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reportId:
                      type: string
                      format: uuid
                    userId:
                      type: string
                      format: uuid
                    postId:
                      type: string
                      format: uuid
                    reason:
                      type: string
                    content:
                      type: string
                    status:
                      type: string
                      enum: [Pending, Resolved]
        401:
          description: Unauthorized
components:
  schemas:
    Report:
      type: object
      properties:
        reportId:
          type: string
          format: uuid
          example: "a12e4567-e89b-12d3-a456-426614174999"
        userId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        postId:
          type: string
          format: uuid
          nullable: true
          example: "456e7890-e89b-12d3-a456-426614174111"
        reason:
          type: string
          enum: ["SPAM", "INAPPROPRIATE", "COPYRIGHT_VIOLATION"]
          example: "SPAM"
        content:
          type: string
          example: "This post contains inappropriate content."
        status:
          type: string
          enum: ["PENDING", "RESOLVED", "REJECTED"]
          example: "PENDING"
        createdAt:
          type: string
          format: date-time
          example: "2025-03-09T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-03-09T12:30:00Z"


